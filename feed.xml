

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://dohaelee.github.io/</id>
  <title>Dohae Lee</title>
  <subtitle>"개발자 이도해 기술 블로그"</subtitle>
  <updated>2021-08-08T13:41:56+08:00</updated>
  <author>
    <name>Dohae Lee</name>
    <uri>https://dohaelee.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://dohaelee.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="https://dohaelee.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Dohae Lee </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>타입스크립트 Less · Default Parameter</title>
    <link href="https://dohaelee.github.io/posts/2021-06-15-typescript-less-parameter/" rel="alternate" type="text/html" title="타입스크립트 Less · Default Parameter" />
    <published>2021-06-15T00:00:00+08:00</published>
  
    <updated>2021-06-15T00:00:00+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-06-15-typescript-less-parameter/</id>
    <content src="https://dohaelee.github.io/posts/2021-06-15-typescript-less-parameter/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="typescript" />
    
  

  
    <summary>
      





      선택적 파라미터

function greeting(name, age, gender) {
  console.log(`Hello ${name}, you are ${age}, you are a ${gender}`);
}

greeting(name, age);
// Hello stranger, you are 24, you are a undefined


위 자바스크립트 예시에서, 함수 greeting은 3개의 인자를 사용하도록 선언되어있지만, 호출시 2개의 파라미터만 넘겨도 실행된다.

index.ts:9:1 - error TS2554: Expected 3 arguments, but got 2.
9 greeting(name, age);
  index.ts:5:30
    5 function greeting(n...
    </summary>
  

  </entry>

  
  <entry>
    <title>타입스크립트 .eslintrc 파일 Parsing Error 해결 방법</title>
    <link href="https://dohaelee.github.io/posts/2021-06-14-tslint-error/" rel="alternate" type="text/html" title="타입스크립트 .eslintrc 파일 Parsing Error 해결 방법" />
    <published>2021-06-14T00:00:00+08:00</published>
  
    <updated>2021-06-14T00:00:00+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-06-14-tslint-error/</id>
    <content src="https://dohaelee.github.io/posts/2021-06-14-tslint-error/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="typescript" />
    
  

  
    <summary>
      





      증상

.eslintrc.js 파일에 타입스크립트 (과거 .tslint) 설정을 할 때 발생하는 Parsing Error 또는 .eslintrc.js 파일 에러.

parsing error: "parseroptions.project" has been set for @typescript-eslint/parser. the file does not match your project config: .eslintrc.js. the file must be included in at least one of the projects provided.


module.exports 부분에 위와 같은 에러가 생성된다.

해결 방법

먼저 .eslintrc.js 파일의 parserOptions 항목에 project를 다음과...
    </summary>
  

  </entry>

  
  <entry>
    <title>Webpack SASS (SCSS) 사용법</title>
    <link href="https://dohaelee.github.io/posts/2021-04-05-scss-css-loader/" rel="alternate" type="text/html" title="Webpack SASS (SCSS) 사용법" />
    <published>2021-04-05T00:00:00+08:00</published>
  
    <updated>2021-04-05T00:00:00+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-04-05-scss-css-loader/</id>
    <content src="https://dohaelee.github.io/posts/2021-04-05-scss-css-loader/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="webpack" />
    
  

  
    <summary>
      





      설치

npm install sass -D
npm install sass-loader -D
npm install css-loader -D
npm install mini-css-extract-plugin -D


각각의 라이브러리가 하는 역할은 다음과 같다.


  sass-loader : SCSS 파일을 CSS 파일로 변환
  css-loader : CSS 파일을 읽음
  mini-css-extract-plugin : 한 파일로 묶음


설정

const miniCssExtractPlugin = require("mini-css-extract-plugin");

// ... 생략 ... //

plugins: [new miniCssExtractPlugin({ filename: "css/styles.css...
    </summary>
  

  </entry>

  
  <entry>
    <title>Webpack 여러 개의 Entry Point 지정하기</title>
    <link href="https://dohaelee.github.io/posts/2021-04-04-entry-file-name/" rel="alternate" type="text/html" title="Webpack 여러 개의 Entry Point 지정하기" />
    <published>2021-04-04T00:00:00+08:00</published>
  
    <updated>2021-04-04T00:00:00+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-04-04-entry-file-name/</id>
    <content src="https://dohaelee.github.io/posts/2021-04-04-entry-file-name/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="webpack" />
    
  

  
    <summary>
      





      module.exports = {
  entry: {
    // 다수의 엔트리 포인트 지정
    main: "./src/client/js/main.js",
    something: "./src/client/js/something.js",
  },
  mode: "development",
  watch: true,
  output: {
    // 각각을 이름 [name] (변수)으로 저장
    filename: "js/[name].js",
    path: path.resolve(__dirname, "assets"),
    clean: true,
  },
};


    </summary>
  

  </entry>

  
  <entry>
    <title>Webpack Babel-Loader 사용법</title>
    <link href="https://dohaelee.github.io/posts/2021-04-03-babel-loader/" rel="alternate" type="text/html" title="Webpack Babel-Loader 사용법" />
    <published>2021-04-03T00:00:00+08:00</published>
  
    <updated>2021-04-03T00:00:00+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-04-03-babel-loader/</id>
    <content src="https://dohaelee.github.io/posts/2021-04-03-babel-loader/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="webpack" />
    
  

  
    <summary>
      





      npm install babel-loader -D


{
    test: /\.js$/,
    use: {
        loader: "babel-loader",
        options: {
            presets: [
                ["@babel/preset-env", { targets: "defaults" }],
            ],
        },
    },
}


    </summary>
  

  </entry>

</feed>


