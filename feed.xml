

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://dohaelee.github.io/</id>
  <title>Dohae Lee</title>
  <subtitle>"개발자 이도해 기술 블로그"</subtitle>
  <updated>2021-08-14T10:05:05+08:00</updated>
  <author>
    <name>Dohae Lee</name>
    <uri>https://dohaelee.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://dohaelee.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="https://dohaelee.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Dohae Lee </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Webpack SASS (SCSS) 사용법</title>
    <link href="https://dohaelee.github.io/posts/2021-04-05-scss-css-loader/" rel="alternate" type="text/html" title="Webpack SASS (SCSS) 사용법" />
    <published>2021-04-05T00:00:00+08:00</published>
  
    <updated>2021-04-05T00:00:00+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-04-05-scss-css-loader/</id>
    <content src="https://dohaelee.github.io/posts/2021-04-05-scss-css-loader/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="webpack" />
    
  

  
    <summary>
      





      설치

npm install sass -D
npm install sass-loader -D
npm install css-loader -D
npm install mini-css-extract-plugin -D


각각의 라이브러리가 하는 역할은 다음과 같다.


  sass-loader : SCSS 파일을 CSS 파일로 변환
  css-loader : CSS 파일을 읽음
  mini-css-extract-plugin : 한 파일로 묶음


설정

const miniCssExtractPlugin = require("mini-css-extract-plugin");

// ... 생략 ... //

plugins: [new miniCssExtractPlugin({ filename: "css/styles.css...
    </summary>
  

  </entry>

  
  <entry>
    <title>Webpack 여러 개의 Entry Point 지정하기</title>
    <link href="https://dohaelee.github.io/posts/2021-04-04-entry-file-name/" rel="alternate" type="text/html" title="Webpack 여러 개의 Entry Point 지정하기" />
    <published>2021-04-04T00:00:00+08:00</published>
  
    <updated>2021-04-04T00:00:00+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-04-04-entry-file-name/</id>
    <content src="https://dohaelee.github.io/posts/2021-04-04-entry-file-name/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="webpack" />
    
  

  
    <summary>
      





      module.exports = {
  entry: {
    // 다수의 엔트리 포인트 지정
    main: "./src/client/js/main.js",
    something: "./src/client/js/something.js",
  },
  mode: "development",
  watch: true,
  output: {
    // 각각을 이름 [name] (변수)으로 저장
    filename: "js/[name].js",
    path: path.resolve(__dirname, "assets"),
    clean: true,
  },
};


    </summary>
  

  </entry>

  
  <entry>
    <title>Webpack Babel-Loader 사용법</title>
    <link href="https://dohaelee.github.io/posts/2021-04-03-babel-loader/" rel="alternate" type="text/html" title="Webpack Babel-Loader 사용법" />
    <published>2021-04-03T00:00:00+08:00</published>
  
    <updated>2021-04-03T00:00:00+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-04-03-babel-loader/</id>
    <content src="https://dohaelee.github.io/posts/2021-04-03-babel-loader/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="webpack" />
    
  

  
    <summary>
      





      npm install babel-loader -D


{
    test: /\.js$/,
    use: {
        loader: "babel-loader",
        options: {
            presets: [
                ["@babel/preset-env", { targets: "defaults" }],
            ],
        },
    },
}


    </summary>
  

  </entry>

  
  <entry>
    <title>Webpack 기본 사용법</title>
    <link href="https://dohaelee.github.io/posts/2021-04-02-webpack-config/" rel="alternate" type="text/html" title="Webpack 기본 사용법" />
    <published>2021-04-02T00:00:00+08:00</published>
  
    <updated>2021-08-03T12:54:29+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-04-02-webpack-config/</id>
    <content src="https://dohaelee.github.io/posts/2021-04-02-webpack-config/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="webpack" />
    
  

  
    <summary>
      





      설치

npm install webpack webpack-cli -D


설정 파일 만들기

const path = require("path");

module.exports = {
  entry: "./src/client/js/main.js",
  mode: "development",
  watch: true, // 자동으로 변화 감시
  output: {
    filename: "main.js",
    path: path.resolve(__dirname, "assets", "js"),
    clean: true, // 결과물을 새로 생성할 때 기존의 폴더를 삭제함
  },
};


webpack.config.js 파일 생성하고 환경설정 객체를 export한다.

Path 다루기

output:...
    </summary>
  

  </entry>

  
  <entry>
    <title>Webpack이란?</title>
    <link href="https://dohaelee.github.io/posts/2021-04-01-what-is-webpack/" rel="alternate" type="text/html" title="Webpack이란?" />
    <published>2021-04-01T00:00:00+08:00</published>
  
    <updated>2021-04-01T00:00:00+08:00</updated>
  
    <id>https://dohaelee.github.io/posts/2021-04-01-what-is-webpack/</id>
    <content src="https://dohaelee.github.io/posts/2021-04-01-what-is-webpack/" />
    <author>
      <name>Dohae Lee</name>
    </author>

  
    
    <category term="webpack" />
    
  

  
    <summary>
      





      

WebPack은 자바스크립트 애플리케이션의 정적 모듈 번들러 (Static Module Bundler)로, 규모가 있는 시스템에 존재할 수 있는 많은 자바스크립트 파일들을 하나의 파일로 관리하기 위해 사용된다.

Bundle이란?


  소프트웨어 및 일부 하드웨어와 함께 작동하는 데 필요한 모든 것을 포함하는 패키지
  각각의 모듈들에 대해 의존성 관계를 파악한 하나 또는 여러 개의 그룹


Module Bundler란?

대부분의 프로그래밍 언어에서는 코드를 여러 개의 파일로 분할하고, 각각의 파일에 담겨있는 기능들을 사용하기 위해서 애플리케이션에서 import 하는 방식을 사용한다. 하지만 브라우저에서는 이러한 import 방식을 사용할 수 없기 때문에 Module Bundler가 이 기능을 ...
    </summary>
  

  </entry>

</feed>


